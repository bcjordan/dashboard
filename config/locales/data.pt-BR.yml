"pt":
  data:
    script:
      name:
        20-hour:
          desc: Introdução ao Curso de Ciência da Computação para primeira à nona
            série
          Unplug1: Fase 1
          Maze: Fase 2
          Unplug2: Fase 3
          Unplug3: Fase 4
          Artist: Fase 5
          Unplug4: Fase 6
          Artist2: Fase 7
          Unplug5: Fase 8
          Farmer: Fase 9
          Unplug6: Fase 10
          Artist3: Fase 11
          Unplug7: Fase 12
          Farmer2: Fase 13
          Unplug8: Fase 14
          Artist4: Fase 15
          Unplug9: Fase 16
          Farmer3: Fase 17
          Unplug10: Fase 18
          Artist5: Fase 19
          Unplug11: Fase 20
        Hour of Code:
          desc: Hora do Código
          Maze: Fase 1
        Edit Code:
          desc: Editar Código (beta)
          MazeEC: Fase 1
        2014 Levels:
          desc: Quebra-cabeças 2014 (beta)
          Bounce: Fase 1
        Builder Levels:
          desc: Puzzles criados pelo utilizador (beta)
          Custom: Fase 1
        Flappy Levels:
          desc: Flappy Bird
          Flappy: Fase 1
        Jigsaw Levels:
          desc: Jigsaw (beta)
          Jigsaw: Fase 1
        Step Levels:
          desc: Maze (beta)
          MazeStep: Stage Step
    game:
      name:
        Unplug1: Introdução à Ciência da Computação
        Maze: O Labirinto
        Multi: Multiple Choice Stuffs
        Unplug2: Pensamento Computacional
        Unplug3: Papel da Programação Gráfica
        Artist: O Artista
        Unplug4: Algoritmos
        Artist2: O Artista 2
        Unplug5: Funções
        Farmer: O Fazendeiro
        Unplug6: Condições
        Artist3: O Artista 3
        Unplug7: Canção escrita
        Farmer2: O Fazendeiro 2
        Unplug8: Abstração
        Artist4: O Artista 4
        Unplug9: Programação do relé
        Farmer3: O Fazendeiro 3
        Unplug10: A Internet
        Artist5: O Artista 5
        Unplug11: Embrulhe
        MazeEC: O Labirinto
        Bounce: Pulo
        Flappy: Flappy Bird
        Jigsaw: Quebra-cabeça
        MazeStep: Maze Step Mode
    trophy:
      name:
        Bronze: Bronze
        Silver: Prata
        Gold: Ouro
    concept:
      description:
        sequence: Sequência
        if: Bloco "Se"
        if_else: Bloco "se-senão"
        loop_times: Repetir o bloco por um determinado número de vezes
        loop_until: Repetir um bloco até satisfazer uma condição
        loop_while: Repetir um bloco atendendo uma condição
        loop_for: Contador do bloco
        function: Funções
        parameters: Funções com parâmetros
    level:
      instructions:
        maze_2_2: 'Pode me ajudar a pegar o porco malvado? Empilhe uns blocos "Avançar"
          juntos e pressione "Executar programa" para me ajudar a chegar lá. '
        maze_2_1: Esse porco está arrepiando minhas penas. Me ajude a encontrá-lo!
        maze_2_2_5: Desenhe o caminho e me leve até o porco bobo. Evite a dinamite
          ou as penas vão voar!
        maze_2_3: Me guie até a maldade verde! (Cuidado com a dinamite)
        maze_2_4: Mantenha a calma e me ajude a encontrar o porco mau. Senão eu posso
          ficar zangado!
        maze_2_5: Há uma maneira de chegar ao porco verde usando apenas 2 blocos.
          Você consegue descobrir como?
        maze_2_6: Tente me mandar para o intruso verde usando apenas três blocos.
        maze_2_7: Me ajude a banir esse porquinho mau usando o menor número de blocos
          possíveis. Tente usar mais de um bloco "Repetir".
        maze_2_8: 'Quando um bloco é cinzento, significa que não o podes eliminar
          nem alterá-lo. Tenta e resolve este puzzle usando o bloco "repetir" que
          repete 3 vezes. Experimenta por estes 3 blocos dentro do bloco "repetir"
          cinzento: move, move, vira.'
        maze_2_9: Ok, tente o novo bloco "Repetir até" - ele vai repetir até eu chegar
          ao porco irritante.
        maze_2_10: Ok, pratique mais uma vez - você pode resolver isto usando apenas
          4 blocos?
        maze_2_11: Pessoa querida.  Mim zumbi. Mim com fome. Devo... chegar... no
          girassol... Me ajude a chegar lá com apenas 5 blocos?
        maze_2_12: Ok, isto é semelhante, mas ligeiramente diferente. Você pode fazê-lo
          em apenas 5 blocos?
        maze_2_13: 'Use o novo bloco "SE" para me deixar decidir quando virar. Dica:
          você só precisa de mais um bloco, mas aprenda como podemos configurá-lo,
          então você mesmo poderá fazê-lo na próxima vez.'
        maze_2_14: Ok, isso é como o último quebra-cabeça, mas você precisa se lembrar
          de como você usou o bloco "SE" e o bloco "repetir" juntos.
        maze_2_15: Mim quer girassol! Use um bloco "SE" para que eu chegue lá com
          o menor número de blocos.
        maze_2_16: Ok, vamos fazer isto novamente para praticar - isso não é muito
          diferente, mas fique de olho nos comilões!
        maze_2_17: Os blocos "se-senão" verificam uma condição, e em seguida, fazem
          uma coisa ou outra. Para me levar ao girassol tente usar este novo bloco.
        maze_2_18: Mais um treino para o bloco "se-senão", você consegue na primeira
          tentativa?
        maze_2_19: Você pode adicionar apenas 3 blocos para me ajudar a resolver um
          labirinto mais complexo? Se você fizer isso direito, eu posso andar qualquer
          caminho cheio de curvas, não importa o comprimento.
        turtle_1_1: Olá, sou um artista. Podes escrever código para fazer com que
          eu desenhe quase tudo. Usa alguns blocos para me fazer desenhar por cima
          das linhas cinzentas na imagem.
        turtle_1_2: 'Agora, desenhe um quadrado. NOTA: use a sua cor preferida pegando-a
          no novo bloco "definir cor".'
        turtle_1_3: Faça um quadrado usando apenas 3 blocos.
        turtle_1_4: 'Desenhe um triângulo cujos lados são todos em cores diferentes,
          usando a opção "cor aleatória" que escolhe uma cor diferente cada vez que
          é executado. Dica: você terá que descobrir até onde girar clicando no número
          do bloco de girar.'
        turtle_1_5: Agora, para praticar, desenhe um triângulo e, em seguida, um quadrado
          para desenhar um envelope.
        turtle_1_6: 'você consegue descobrir como desenhar esse triângulo e esse quadrado?
          Dica: Faça o triângulo primeiro e, em seguida, descubra o quanto virar antes
          de desenhar o quadrado.'
        turtle_1_7: Ok, vamos dificultar um pouco - veja se você pode desenhar esses
          óculos verdes. Os quadrados tem 100 pixels de cada lado, e eles são separados
          por 50 pixels. Não se esqueça de desenhar com a cor verde!
        turtle_1_8: Ok, tente descobrir o que acontece se você executar esse código
          (ou pressione "Executar" para experimentá-lo). Em seguida, repita-o várias
          vezes para completar o desenho. As cores serão diferentes a cada vez que
          o código for executado.
        turtle_1_9: Você consegue descubrir qual número você precisa para substituir
          os pontos de interrogação para desenhar um círculo?
        turtle_1_10: 'Você conseguiu! Agora, desenhe o que quiser. Algumas idéias
          para se divertir: um boneco, floco de neve ou espiral. Tente também o novo
          bloco de "definir largura". Divirta-se!'
        turtle_4_1: 'Você pode desenhar um triângulo (com bordas de 100 pixels) com
          apenas 3 blocos? Dica: use um bloco de "repetir".'
        turtle_4_2: Adiciona um bloco "virar à direita 90 graus" algures no meio do
          programa já inserido na área de trabalho para desenhares estes triângulos.
        turtle_4_3: Ok, aqui está o código que você escreveu para desenhar um único
          triângulo. Você pode adicionar um bloco "repetir" e "virar" para fazer uma
          linda flor?
        turtle_4_4: 'Aqui está o mesmo código de quebra-cabeça anterior, mas virando
          apenas 36 graus depois de desenhar cada triângulo. Quantas vezes isso precisa
          repetir? (Dica: depois de 360 graus o desenho será um círculo completo)'
        turtle_4_5: 'Aqui está o mesmo código de quebra-cabeça anterior, mas repetindo
          a curva 36 vezes. Quantos graus devem ter as curvas? (Dica: depois de 360
          graus o desenho será um círculo completo)'
        turtle_4_6: Usando apenas 3 blocos, você pode desenhar um quadrado com arestas
          de 20 pixeis?
        turtle_4_7: 'Aqui está o código para desenhar o quadrado do último quebra-cabeça.
          Você pode repetir isso para desenhar 10 quadrados adjacentes como uma escada?
          Dica: você só precisa de 2 blocos.'
        turtle_4_8: Aqui está a solução para o quebra-cabeça anterior. Você pode adicionar
          apenas mais 2 blocos para completar o desenho?
        turtle_4_9: Aqui está a solução para o quebra-cabeça anterior. Quantos graus
          você deve virar para completar o desenho? (Você provavelmente precisará
          chutar algumas vezes)
        turtle_4_10: Aqui está a solução para o quebra-cabeça anterior. Quantas vezes
          você deve repetir para completar o desenho?
        turtle_4_11: Tente alterar os números nos blocos  "virar" e "repetir" para
          fazer padrões diferentes. Ou então, experimente mudar o resto do código
          para desenhar o que quiser.
        maze_karel_1_1: Oi, eu sou um fazendeiro. Preciso de sua ajuda para planificar
          o campo na minha fazenda para que esteja pronto para o plantio. Mova o monte
          de terra e use o bloco "remover" para removê-lo.
        maze_karel_1_2: Em seguida, me leve para perto do buraco e coloque com DUAS
          pás cheias de terra, usando o bloco "preencher".
        maze_karel_1_3: Leve-me para a pilha de terra e diga-me quantas pás cheias
          devo remover, usando o mínimo número de blocos possível.
        maze_karel_1_4: 'Você pode me ajudar a remover todas as quatro pilhas de terra?
          Dica: Se puder, use um bloco de repetição.'
        maze_karel_1_5: 'Ajude-me a encher todos esses buracos com 5 pás cheias de
          terra. Dica: Você pode usar um bloco "repetir" dentro de um bloco "enquanto".'
        maze_karel_1_6: Remova todas as pilhas de terra, usando o mínimo de blocos
          possível. As novas opções no menu no bloco "enquanto" me dizem se eu estou
          em cima de uma pilha de terra ou um buraco.
        maze_karel_1_7: Uau, eu encontrei um buraco muito fundo! Não sei quantas pás
          de terra precisa. Você pode escrever um programa para encher-lo até o chão,
          não é mesmo?
        maze_karel_1_8: Ajude-me a encher o buraco no final do campo, usando a menor
          quantidade de blocos possível.
        maze_karel_1_9: 'Faça-me remover todos estes montes de terra. Tente usar o
          menor número de blocos possível. Dica: tente usar um bloco "enquanto".'
        maze_karel_1_10: Estou trabalhando até tarde, então está escuro, e eu não
          posso dizer o quanto essas pilhas são grandes. Agora eu não tenho todas
          as opções que eu costumava ter sobre o bloco "enquanto". Mova-me ao longo
          do campo e se houver uma pilha, remova-a.
        maze_karel_1_11: 'Ainda está escuro lá fora. Mova-me ao longo do campo. Se
          houver uma pilha, remova-a e se houver um buraco, preencha-o. Dica: use
          o menu suspenso de opções no bloco "se".'
        turtle_2_1: 'Olá! Mim artista zumbi. Eu gostar desenho! Me ajude a desenhar
          um quadrado com uma cor especial. Importante: você tem todos os mesmos blocos
          de antes, mas agora eles estão divididos em categorias.'
        turtle_2_2: Bem-vindo ao uso de funções, permitindo,assim, que você defina
          novos blocos! Tente o novo bloco  "desenhar um quadrado", encontrado na
          categoria "Funções", para desenhar um pequeno quadrado verde de 50 x 50.
        turtle_2_3: Use o bloco de "repetir" (na categoria de "Laços") para desenhar
          3 quadrados de tamanho 100 cada,  120 graus de separação. Faça em 3 cores
          diferentes, aleatórias.
        turtle_2_4: 'Agora vamos ficar chiques. Mude o código para desenhar 36 quadrados,
          100 pixels de largura e 10 graus entre eles. Dica: você pode usar a barra
          deslizante para me fazer ir mais rápido.'
        turtle_2_5: Desenhe quadrados com lados de 50, 60, 70, 80 e 90 pixels.  Você
          vai precisar usar a função "desenhar um quadrado" cinco vezes.
        turtle_2_6: 'Ok, este programa irá utilizar um contador para desenhar os mesmos
          quadrados da última vez. Você quer o quadrado do mesmo tamanho que o contador,
          então use o bloco "contador". Dica: É na categoria Variáveis.'
        turtle_2_7: Aqui esta um programa para desenhar uma espiral, mas os blocos
          estão desativados para que eles não funcionem. Faça um novo programa usando
          um bloco de "contar com" (na categoria de Laços) e bloco de "contador" (na
          categoria de Variáveis) para desenhar a mesma espiral.
        turtle_2_7_5: Há uma nova função "desenhar um boneco de neve" (na categoria
          de funções). Desenhe dois bonecos de neve, de 250 e 100 de altura.
        turtle_2_8: Este é um pouco complicado. Use a função "desenhar um boneco de
          neve" e o bloco novo "avançar" (na categoria de Ações). Desenhe 3 bonecos
          de neve em cores diferentes, separados por 100 pixels.
        turtle_2_9: Use um laço "contar com" para desenhar uma família de bonecos
          de neve, com alturas de 100, 110, 90, 80 e 70. Os bonecos de neve devem
          estar separados por 60 pixels.
        turtle_2_10: Aqui está algum código para você experimentar em diferentes espirais.  O
          que acontece se você alterar a quantidade de voltas? Ou definir uma cor
          aleatória no laço?  Desenhe o que você quiser.
        maze_karel_2_1: 'Tente usar os blocos para me ajudar a remover todas as pilhas
          de terra e preencha todos os buracos no chão. Tente usar laços ao invés
          de usar muitos blocos. Dica: você pode colocar um laço dentro de outro laço.'
        maze_karel_2_2: Definimos nosso próprio bloco chamado "encher 5", que agora
          está na categoria de Funções. Use-o para me ajudar a preencher esse buraco.
        maze_karel_2_3: Use o novo bloco de função "preencher 5"para fazer-me preencher
          todos os buracos. Você terá que arrastar o bloco "preencher 5" para fora
          da categoria de funções.
        maze_karel_2_4: Defina uma nova função que remova 7 pás. Em seguida, use-a
          para escrever um programa que me ajude a remover todas as pilhas de terra.
        maze_karel_2_5: Crie uma nova função que remove 6 pás de uma pilha e use-a
          para me ajudar a nivelar todas as pilhas.
        maze_karel_2_6: Usar duas novas funções, "preencher 8" e "remover 8", para
          ajudar-me a nivelar a pilha e preencher o buraco.
        maze_karel_2_7: Há uma vaca no meu campo! Escreva uma nova função que me ajuda
          a evitar a vaca e remover a pilha. Coloque todos os seus blocos dentro da
          nova função.
        maze_karel_2_8: Use esta nova função, "evitar a vaca e remover 1", para me
          ajudar a remover todas as pilhas.
        maze_karel_2_9: Ok, aqui está uma função que remove 4 pilhas diferentes de
          terra em uma coluna vertical. Tente colocar essa função dentro de um laço,
          para que você remova todas as pilhas de terra usando apenas alguns blocos
          novos.
        maze_karel_2_10: Mova-me através do campo e use essas duas funções para me
          ajudar a remover todas as pilhas e preencher todos os buracos.
        turtle_3_1: Este quebra-cabeça mostra pata você como as funções "desenhar
          um quadrado" e "desenhar um círculo"  são definidas.  Definir uma função
          não executa estes blocos.  Você tem que chamar o bloco "desenhar um quadrado"
          para realmente desenhar um quadrado.
        turtle_3_2: Usando a função "desenhar um quadrado" como um exemplo, crie a
          função "desenhar um triângulo" e utilize-a.
        turtle_3_3: 'Desenhe uma cerca triangular em torno dos gatos e uma cerca quadrada
          em volta da vaca.  Dica: Teste o programa à medida em que você avança.'
        turtle_3_4: Veja se você pode descobrir como usar "desenhar um quadrado" e
          "desenhar um triângulo" (e alguns outros blocos) para desenhar uma casa
          em torno do leão.
        turtle_3_5: 'Agora crie uma nova função "desenhar uma casa" e use para abrigar
          dos dois gatos. Dica: Crie uma nova função usando o bloco de "fazer algo"
          e digite seu texto para nomear o bloco.'
        turtle_3_6: 'Usando "desenhar um quadrado", por exemplo, adicione uma entrada
          denominada "altura" para "desenhar um triângulo". Em seguida, desenhe triângulos
          em tamanhos diferentes. (Dica: clique na estrela para adicionar uma entrada
          para uma função)'
        turtle_3_7: Adicione uma entrada denominada "altura" para "desenhar uma casa"
          e construa uma casa grande para o elefante (com bordas de 150 pixels de
          largura)
        turtle_3_8: Aqui estão todos os blocos do quebra-cabeça anterior.  Modifique
          "desenhar uma casa" de forma que eu acabe no canto direito inferior depois
          de desenhar uma nova casa. Use essa função modificada para desenhar três
          casas.
        turtle_3_9: Você consegue recriar a função de "desenhar uma casa" sem ajuda?
          Tente e, em seguida, desenhe uma fileira de casas.
        turtle_3_10: Você aprendeu muito! Agora, use para desenhar o que quiser. Tente
          desenhar uma estrela, ou uma espiral, ou um floco de neve.
        maze_karel_debug_seq_1: Bem-vindo à depuração! Meu código não está funcionando
          bem. Você pode achar o problema e corrigí-lo para que eu possa deixar meu
          campo pronto para o plantio?
        maze_karel_debug_seq_2: O que há de errado com este programa? Como você deve
          corrigi-lo para que eu possa remover essa pilha?
        maze_karel_debug_repeat: Faça a depuração deste programa para que meu campo
          fique belo e plano.
        maze_karel_debug_while: Como você deve alterar este programa para me ajudar
          a preencher o buraco?
        maze_karel_debug_if: Ajuda! Corrija o programa para que meu campo seja completamente
          plano.
        maze_karel_debug_if_else: Depure este programa para que eu possa preencher
          os buracos e remover todas as pilhas.
        maze_karel_debug_function_1: O que você deve mudar neste programa para me
          ajudar a remover todas as pilhas?
        maze_karel_debug_function_2: Você pode depurar este programa para mim, para
          que eu possa deixar meu campo plano?
        maze_karel_debug_function_3: 'Edite este programa para eu remover todas as
          pilhas no meu campo. '
        turtle_5_1: Tente executar este programa e faça as alterações para ver o que
          acontece. Você pode descobrir como ele funciona? (Ou excluí-lo e substituí-lo
          por algo totalmente diferente)
        turtle_5_2: Tente executar este programa e faça as alterações para ver o que
          acontece. Você pode descobrir como ele funciona? (Ou excluí-lo e substituí-lo
          por algo totalmente diferente)
        turtle_5_3: Tente executar este programa e faça as alterações para ver o que
          acontece. Você pode descobrir como ele funciona? (Ou excluí-lo e substituí-lo
          por algo totalmente diferente)
        turtle_5_4: Tente executar este programa e faça as alterações para ver o que
          acontece. Você pode descobrir como ele funciona? (Ou excluí-lo e substituí-lo
          por algo totalmente diferente)
        turtle_5_5: Tente executar este programa e faça as alterações para ver o que
          acontece. Você pode descobrir como ele funciona? (Ou excluí-lo e substituí-lo
          por algo totalmente diferente)
        turtle_5_6: Tente executar este programa e faça as alterações para ver o que
          acontece. Você pode descobrir como ele funciona? (Ou excluí-lo e substituí-lo
          por algo totalmente diferente)
        maze_3_1: Eu preciso conseguir aquele porco! Digite algumas chamadas para
          move(); para que eu poder pegar meus ovos de volta.
        maze_3_2: Escreva-me um programa, então eu poderei fazer todo o caminho até
          o porco.
        maze_3_3: Como eu devo chegar até o porco? Certifique-se de que eu não vou
          até a caixa de dinamite (TNT)!
        maze_3_4: Escreva para mim um programa que me leve até o porco, contornando
          a dinamite (TNT).
        bounce_1: Anexe um bloco ao bloco "quando seta para a esquerda" e pressione
          "Executar programa". Mova a raquete usando a seta para a esquerda para alcançar
          o objetivo final.
        bounce_2: Anexe um bloco aos blocos "quando seta para a direita" e "quando
          seta para a esquerda". Mova a raquete para alcançar ambos os objetivos finais.
        bounce_3: Agora tente algo semelhante com o bloco "quando seta para cima".
          Mova a raquete para o destino no topo.
        bounce_4: Desta vez você precisa adicionar quatro blocos. Mova a raquete para
          todos os quatro alvos finais para completar este quebra-cabeça.
        bounce_5: Vamos enviar uma bola voando para baixo para a raquete. Anexe um
          bloco para o bloco "quando a bola bate na raquete" para garantir que a bola
          atinja o alvo destino.
        bounce_6: Agora o alvo destino está no topo. Você precisa anexar blocos para
          ambos os blocos "quando bola bate" para resolver este enigma.
        bounce_7: Anexar blocos a cada um dos blocos "quando". Quique a bola até que
          ela atinja o objetivo final.
        bounce_10: Há agora um gol no topo. Anexe os blocos "marcar ponto" e "marcar
          ponto do adversário" aos blocos "quando a bola no gol" e "quando a bola
          não acertar a raquete" para fazer um jogo. Veja quantos pontos você pode
          marcar antes que seus oponentes marquem duas vezes.
        bounce_11: Agora você pode anexar blocos na parte "quando o jogo começa".
          Você tem que anexar o novo "lançamento de bola nova" em mais de um lugar.
          Além disso, tente mudar a cena ou a velocidade da raquete e da bola e ver
          quantos pontos você pode marcar antes de seu oponente marcar duas vezes
          mais.
        bounce_12: Create your own Bounce game. You can change all the visuals and
          the rules. When you're done, click Share to let friends try your game on
          their phones.
        Custom_builder: Arraste blocos da caixa de ferramentas para a área de trabalho
          para desenhar o nível que você deseja criar. Quando estiver pronto, pressione
          "Executar Programa".
        flappy_1: Anexar um bloco ao bloco "quando clicar" e, em seguida, pressione
          "Executar programa". Clique ou toque na tela para mover Flappy para o alvo.
        flappy_2: Agora que adicionamos algum terreno.  Anexe um bloco ao bloco "quando
          bater no chão".  Seu código precisa ter 'Fim do jogo' quando o Flappy bater.
        flappy_3: O bloco "quando o jogo começar" permite que você execute código
          quando o jogo começa.  Tente definir a velocidade e o bater de asas do nível
          para o alvo.
        flappy_4: O Flappy vai voar através de obstáculos, a menos que você escreva
          código para fazê-lo bater. Anexe um bloco ao bloco "quando atingir um obstáculo".
          Seu código precisa ter 'Fim de jogo' quando Flappy cair no primeiro conjunto
          de tubos.
        flappy_5: Vamos adicionar um painel de pontuação e contar pontos quando o
          Flappy passar pelos obstáculos. Adicione o bloco "quando passar um obstáculo"
          e, em seguida, marque um ponto pelo voo do Flappy através do primeiro conjunto
          de tubos.
        flappy_6: Veja se você ainda pode marcar um ponto depois de fazer o Flappy
          bater as asas com uma menor ou maior quantidade.
        flappy_7: Em seguida, tente mudar a cena, anexando um outro bloco ao bloco
          "quando o jogo começa".
        flappy_8: Você pode definir o visual a qualquer momento, não apenas quando
          o jogo começa. Tente criar um cenário ALEATORIO quando outros eventos acontecem,
          por exemplo, ao passar um obstáculo.
        flappy_9: Para misturar as coisas, ao bater em um obstáculo ou no chão, em
          vez de terminar o jogo tente voltar o placar para 0.
        flappy_11: Crie seu próprio jogo Flappy. Você pode mudar todo o visual e todas
          as regras, até mesmo a gravidade. Quando terminar, clique em Compartilhar
          para que seus amigos experimentem seu jogo em seus celulares.
        jigsaw_1: Clica no bloco
        jigsaw_2: Arrasta o bloco para o alvo
        jigsaw_3: Organize os blocos para formar a imagem
        jigsaw_4: Organize os blocos para formar a imagem
        jigsaw_5: Organize os blocos para formar a imagem
        jigsaw_6: Organize os blocos para formar a imagem
        jigsaw_7: Organize os blocos para formar a imagem
        jigsaw_8: Organize os blocos para formar a imagem
        jigsaw_9: Organize os blocos para formar a imagem
        jigsaw_10: Organize os blocos para formar a imagem
        jigsaw_11: Organize os blocos para formar a imagem
        jigsaw_12: Arrange the blocks to form the image
        mazestep_1: Maze step description here
        mazestep_2: Maze step description here
        mazestep_3: Maze step description here
        mazestep_4: Maze step description here
        mazestep_5: Maze step description here
        studio_1: Can you make this dog say "hello world"?
        studio_2: Can you write a program to make this dog move to the target?
        studio_3: Can you write a program that makes the dog move to the cat, and
          have the cat say "hello" when the dog reaches him?
        studio_4: Can you write a program to make this knight move around using the
          up / down / left /right keys to hit all of the targets?
        studio_5: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dragon up and down repeatedly?
        studio_6: Can you have the knight say "ouch!" if he runs into the dragon,
          and then move him with the arrows to the target?
        studio_99: Create your own story. When you're done, click Share to let friends
          try your story on their phones.
      levelIncompleteError:
        maze_2_8: 'Para resolver isso, encontre o padrão que se repete. Use um bloco
          "repetir" com estes 3 blocos no seu interior:  mover, mover, vire à direita.'
      other1StarError:
        maze_2_14: Você precisa de um bloco "se" dentro de um bloco "repetir". Se
          você está tendo problemas, tente o nível anterior novamente para ver como
          funcionava.
      tooFewBlocksMsg:
        maze_2_8: 'Para resolver isto, encontre o padrão que se repete. Utilize um
          bloco "repetir" com estes 3 blocos dentro dele: "mover", "mover" e "virar
          à direita".'
    video:
      name:
        maze_intro: Introdução ao Labirinto
        artist_intro: Introdução ao Artista
        farmer_intro: Introdução ao Fazendeiro
        flappy_intro: Introdução ao Flappy
        loop_times: Bloco "Repetir Vezes"
        loop_until: Bloco "Repita até que"
        if: Bloco "se"
        if_else: Bloco "Se/Senão"
        function: Funções
        loop_while: Bloco "Enquanto"
        loop_for: Bloco "contador"
        parameters: Funções com parâmetros
        hoc_wrapup: Finalizando a Hora de Código
        20_wrapup: Concluindo as 20-horas
    callout:
      text:
        drag_blocks: Arrasta um bloco "mover" e encaixa-o por baixo de outro bloco
        run: Clica em "executar" para experimentar o teu programa
        watch_again: Clique aqui para assistir o vídeo novamente
        gray_block_explanation: Blocks that are grey can't be moved or deleted. Can
          you solve the puzzle anyway?
        show_code_explanation: Click here to see the code for the program you're making
        instructions_repeat_explanation: The instructions for each puzzle are repeated
          here
        category_explanation: You have all the same blocks but they've now been arranged
          in categories
        set_sprite_image: Attach a "set actor to image" block to the "when story starts"
          block to enable an actor for this story
        studio_say_text: Type what you want your actor to say within these quotes
