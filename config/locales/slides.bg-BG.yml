"bg":
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Добре дошли в първия си час по програмиране! Нека да се потопим направо
          в първото си предизвикателство.
      2:
        image: notes/hoc1_2.jpg
        text: Ние ще  използваме Blockly. Това е визуален език за програмиране, където
          трябва само да плъзнете и пуснете блоковете за да напишете код.
      3:
        image: notes/hoc1_3.jpg
        text: Кодът се пише, но Blockly е визуален. Всеки блок отговаря на един ред
          от "истински" код.
      4:
        image: notes/hoc1_4.jpg
        text: Ще научите основите на компютърните науки, концепции, които се използват
          навсякъде дори за създаването на приложения за контролиране на марсоходът
          на Марс.
      5:
        image: notes/hoc1_5.jpg
        text: Програмата е набор от инструкции за вашия компютър, които  да следва.
      6:
        image: notes/hoc1_6.jpg
        text: Целта на вашата първа програма е да посочите на ядосаната птица пътят
          за да удари зеленото прасе.
      7:
        image: notes/hoc1_7.jpg
        text: От лявата страна е лабиринтът, където се изпълнява вашата програма.
          Инструкциите за всеки пъзел са под лабиринта.
      8:
        image: notes/hoc1_8.jpg
        text: В средата на кутията с инструменти има команди за ядосаната птица. Вие
          ще ги използвате  за да изградите вашия код.
      9:
        image: notes/hoc1_9.jpg
        text: Вдясно е вашата работна област, където ще можете да плъзнете блокове
          от кутията с инструменти. За да изтриете блок просто го плъзнете в кошчето
          в ъгъла.
      10:
        image: notes/hoc1_10.jpg
        text: Всеки блок е една инструкция. Ако плъзнете "продължи напред" блок във
          вашата работна област и натиснете "Изпълни програмата", птицата ще се премести
          едно квадратче  напред в лабиринта.
      11:
        image: notes/hoc1_11.jpg
        text: За да направите повече от едно действие, можете да плъзнете много блокове
          във вашата работна област и да ги прикрепите един към друг. Птицата ще извърши  вашите
          команди от най-горната до най-долната.
      12:
        image: notes/hoc1_12.jpg
        text: Ако стартирате програмата и искате да поправите кода си и да опитате
          отново, натиснете бутона "Възстановяване".
      13:
        image: notes/hoc1_13.jpg
        text: Да вървим да хванем тези прасета!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Здравейте аз съм младши! На всеки състезателен екип са му  необходими
          компютърни учени, за да спечели. Те анализират данни от колата за да може
          тя да се подобри.
      2:
        image: notes/stage5_2.jpg
        text: В тези пъзели вие ще бъдете художник, който чертае линия зад себе си,
          където и да отиде.
      3:
        image: notes/stage5_3.jpg
        text: Този блок се казва "преместване напред със 100 пиксела." Пикселите са
          наистина много малки точки на вашия екран.
      4:
        image: notes/stage5_4.jpg
        text: Този блок се казва, "обърни се надясно под 90 градуса." Това ще обърне
          вашия художник във определената посока както "завий" блоковете при ядосаните
          птици.
      5:
        image: notes/stage5_5.jpg
        text: Кликнете върху стрелката в някой от тези блокове, за да промените броя
          на движенията на художника напред или  въртене. Поиграйте си с блоковете,
          за да се запознаете с техните възможности.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Здравейте аз съм Паола! В тези пъзели Вие сте земеделски производител,
          който трябва да заравни нивата си за да започне засаждане на семена.
      2:
        image: notes/stage9_2.jpg
        text: Трябва да премахнете всички купчинки и запълните всички дупки.
      3:
        image: notes/stage9_3.jpg
        text: Новите блокове премахват една лопата мръсотия от купчината и запълват
          с една лопата дупката.
      4:
        image: notes/stage9_4.jpg
        text: Купчинките и дупките са с различни размери, така че вие трябва да кажете
          на фермера колко лопати да използва.
    flappy_intro:
      1:
        image: бележки/flappy01.jpg
        text: Здравейте аз съм Кейти! Едно от най-вълнуващите неща за компютърните
          науки е, че една компютърна програма може да бъде интерактивна.
      2:
        image: бележки/flappy02.jpg
        text: Ако някой кликне или докосне компютър или телефон, той генерира събитие,
          и има  код, който решава какво да се направи, когато възникне събитие.
      3:
        image: бележки/flappy03.jpg
        text: 'Например, може да имаме МАНИПУЛАТОР на събитие, който казва "когато
          мишката е натисната ще се възпроизведе на звук" '
      4:
        image: бележки/flappy04.jpg
        text: Чувал ли си за играта FlappyBird? С помощта на манипулатори на събития,
          ние ще те научим да програмираш своя собствена потребителска версия на FlappyBird!
      5:
        image: бележки/flappy05.jpg
        text: Кода, който вие ще напишете се състои от блокове, които представляват
          команди за компютъра. Зад всеки от тези блокове стои реален код.
      6:
        image: бележки/flappy06.jpg
        text: 'Ако погледнете в работната област, ще видите зелени блокове, които
          сме попълнили за вас - това са "манипулатори" '
      7:
        image: бележки/flappy07.jpg
        text: Ако искате птицата да пляска с крила, когато щракнете с мишката, можете
          да направите това чрез поставяне на блокът "пляскане с крила" при манипулатора
          на подходящо събитие, и сега в играта си всеки път, когато щракнете с мишката,
          птица ще пляска с криле.
      8:
        image: бележки/flappy08.jpg
        text: При всеки пъзел в тази дейност ние ще въвеждаме нови типове събития
          под формата на зелени блокове в работната област и ти можеш да избереш как
          да ги ползваш.
      9:
        image: бележки/flappy09.jpg
        text: Когато видиш падащата стрелка като тази, това означава, че можеш да
          промениш настройките - като какъв звук да се възпроизведе когато flappy
          удари земята.
      10:
        image: бележки/flappy10.jpg
        text: Във финалния пъзел ще успееш да създадеш своя собствена игра и да я
          споделиш със своите приятели. Забавлявай се!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Здравейте аз съм Марк! Нека да обясня какво представляват командите
          за повторения. Използването на тези команди казва на компютъра да повтаря
          отново и отново всеки набор от действия, хиляди или дори милиони пъти.
      2:
        image: notes/hoc2_2.jpg
        text: В този пъзел ние трябва да накараме птицата да се придвижи напред с
          5 квадратчета, за да стигне до прасето.
      3:
        image: notes/hoc2_3.jpg
        text: Можем да използваме нови "повтари" блокове за да си помогнем.
      4:
        image: notes/hoc2_4.jpg
        text: Вместо да плъзгаме 5 "продължи напред" блокове...
      5:
        image: notes/hoc2_5.jpg
        text: Ние ще поставим "продължи напред" блока вътре в блока "повтори" и ще
          напишем число в блока за да кажем колко пъти да се повтори действието.
      6:
        image: notes/hoc2_6.jpg
        text: 'това е важно: можете да поставите повече от една команда в "повтори"
          блока.'
      7:
        image: notes/hoc2_7.jpg
        text: Насладете се на използването на вашия нов "повтори" блок!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Здравейте аз съм Крис. Преди да постъпя в Маями Хийт, отидох в Джорджия
          Tech за да уча компютърни науки. Нека опитаме нашия нов блок, " повтаряй
          докато" блок.
      2:
        image: notes/hoc3_2.jpg
        text: Какво става, ако ние не знаем колко далеч птицата трябва да се премести
          за да стигне до прасето?
      3:
        image: notes/hoc3_3.jpg
        text: Ако сложим "движи напред" блок вътре в блока, "повтори докато", птицата
          ще продължи напред, докато достигне прасето (или ще се блъсне в стената).
      4:
        image: notes/hoc3_4.jpg
        text: 'И това е важно: както преди, можем да сложим няколко блока вътре в
          блока, "повтори докато", и всички те ще се повтарят.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Здравейте аз съм Бил! Нека да научим нова основна концепция: "Ако".
          Така ние учим компютрите да вземат решения.'
      2:
        image: notes/hoc4_2.jpg
        text: Можете да използвате "ако" изрази всеки ден. Преди да отидете навън
          всяка сутрин, вие си казвате, ако навън вали, трябва да си взема яке.
      3:
        image: notes/hoc4_3.jpg
        text: Ние можем да кажем на зомбито да провери дали има път наляво, и ако
          той открие път, може да се придвижи в тази посока.
      4:
        image: notes/hoc4_4.jpg
        text: За да напишем код за това, нека да поставим "Ако" блок и в него да вмъкнем
          "Завий наляво".
      5:
        image: notes/hoc4_5.jpg
        text: Сега ако сложим "движи напред" блок над него и "повторение" блок около
          всичко, всеки път, когато зомбито се движи, то ще проверява дали има път
          наляво. Командата "Повтаряне" е от решаващо значение, за да проверите за
          завой на всяка стъпка.
      6:
        image: notes/hoc4_6.jpg
        text: Ако твърденията са много важни за компютърните науки. Една от първите
          програми, която съм написал е игра на кръстчета и нули, и имаше едно ако
          твърдение, че  ако другият човек е на път да спечели, компютърът трябва
          да блокира мястото, което му позволява да спечели.
      7:
        image: notes/hoc4_7.jpg
        text: Забавлявайте се с помощта на "Ако" блока!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Здравейте моето име е Салони. Използвам компютърни науки, за да помогна
          за решаването на проблемите в здравеопазването и медицината. Нека да сe
          научим  да използваме "ако или" блок. Той изглежда като блок "Ако", но има
          допълнителна част в края, която казва "или".
      2:
        image: notes/hoc5_2.jpg
        text: Ако сложим в мястото, където се казва "ако" блок "Напред" и "Завий наляво"
          блок където се казва "или," това означава, че зомбито ще избира между две
          опции. Ако има път напред, зомбито ще се движи напред, или (ако липса такава
          възможност)- зомбито ще завие наляво.
      3:
        image: notes/hoc5_3.jpg
        text: Точно като при "Ако" блока, можем да добавим в блока"ако или" блок за
          "повторение", така че зомбито да продължава да се движи и "ако или" блока
          ще извърши проверка дали има някъде възможност да се завие.
      4:
        image: notes/hoc5_4.jpg
        text: Сега преведете зомбитата до местата, където те трябва да стигнат!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Здравейте аз съм Brina, инженер от Instagram. Функция е някои редове
          с код, който искате да използвате отново и отново, така че вместо да повтаряте
          изписването на кода, вие можете да използвате само един блок.
      2:
        image: notes/stage13_2.jpg
        text: Ще научите как да дефинирате функции. Дефинициите имат звезда в ъгъла.
          Името на функцията е написано на най-горния ред.
      3:
        image: notes/stage13_3.jpg
        text: Блоковете, които влизат вътре в дефиницията ни казват  какво прави тя.
          Дефиницията, която ще използваме се нарича "запълване 5" и тя се състои
          от блок за "повторение" и "запълване" блок.
      4:
        image: notes/stage13_4.jpg
        text: Дефиницията се намира на работната област, но нашият фермер няма да
          изпълни функцията, докато ние не поставим "запълване 5" функция блок от
          категорията функции.
      5:
        image: notes/stage13_5.jpg
        text: 'Нека върнем "забавно" обратно във "Функцията!" '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'Здравейте аз съм Макинде! Нека да научим за "докато блок." '
      2:
        image: notes/stage9_6.jpg
        text: '"Докато блок" ще повтаря действие, докато се отчете, че действието
          е извършено.'
      3:
        image: notes/stage9_7.jpg
        text: Например ако фермерът е стъпил върху купчина, той ще продължи да я премахва
          с по 1 лопата, докато все още има купчина под него.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Здравейте аз съм Trina, и работя за Pixar. Работила съм в няколко филми,
          включително и в Шрек.
      2:
        image: notes/stage11_2.jpg
        text: Това е нашата нова "брояч" за цикли. Той ще извършва действия отново
          и отново, а вие можете да направите така, че действията да се променят леко
          всеки път.
      3:
        image: notes/stage11_3.jpg
        text: В този пример, нашият "брояч" на цикли  казва "ще броя с брояч от 50
          до 90  през 10" и вътре в него, ние имаме нашият "нарисувай квадрат" блок.
          Плъзнете блока "брояч" от раздела "Променливи" в "дължина" място.
      4:
        image: notes/stage11_4.jpg
        text: Това означава, че художникът ще нарисува квадрат, който има 50 пиксела
          дължина на страните, тогава той ще добави 10, и ще нарисува квадрат с 60
          пиксела дължина на страните. Тогава ще продължи докато нариува квадрат със
          страни 90. Така ще имаме квадрати със страни 50, 60, 70, 80 и 90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Здравейте аз съм Janete и съм инженер в Zynga.
      2:
        image: notes/stage15_2.jpg
        text: Ако искаме да нарисувате куп триъгълници  със различни размери на страните
          им?
      3:
        image: notes/stage15_3.jpg
        text: Можем да напишем целия този код на ръка или можем да използваме функция
          с параметри.
      4:
        image: notes/stage15_4.jpg
        text: За да направите това, щракнете върху синята звезда на дефиницията на
          "равно на триъгълник" функцията. След това плъзнете "въведете име" в "вмъкни"
          блока.
      5:
        image: notes/stage15_5.jpg
        text: Тогава, ако  напишете "дължина" на мястото, където е "х" и натиснете
          "Enter", вие ще създадете дължина за входни данни на вашата функция.
      6:
        image: notes/stage15_6.jpg
        text: След това кликнете върху звездата. Сега вие трябва да щракнете върху
          категорията на променливи и да плъзнете "дължина" блок в "движи напред"
          блок от вашата дефиниция на функция. Плъзнете и блок за номер.
      7:
        image: notes/stage15_7.jpg
        text: За да използвате вашата функция с параметри, щракнете върху категорията
          функции и изберете "Нарисувай триъгълник с дължина" функция.
      8:
        image: notes/stage15_8.jpg
        text: Сега можете да използвате математически блок за да въведете различни
          номера и да начертаете триъгълници с различни размери.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Поздравления! С последната загадка, която разгадахте, вие просто написахте
          код, който може да каже на всеки робот как да си придвижи, без да се губи
          в лабиринта или тунела. Това можете да повторите и с зомби, птица, марсоход
          или дори самостоятелно шофиращ се автомобил.
      2:
        image: notes/hoc6_2.jpg
        text: Основните понятия, които използваме са в основата на всяка програма
          или приложение, които някога сте ползвали.  Ние научихме за повторение  докато,
          ако отчетите, ако- или отчетите.
      3:
        image: notes/hoc6_3.jpg
        text: Ако ви харесва  първия час на програмиране, посетете code.org за да
          продължите образованието си в компютърните науки! След като завършите нашият
          20 часов курс, вие ще сте усвоили основите на програмиране и може да се
          научите как да създавате програми за телефони, инструкции за роботи, игри,
          и др.
      4:
        image: notes/hoc6_4.jpg
        text: 'Технологията променя всичко, което правим и няма значение, ако сте
          млад или стар: програмирането е забавно, това е творчество  и всеки може
          да научи!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Показването на бележки очаквайте скоро!
