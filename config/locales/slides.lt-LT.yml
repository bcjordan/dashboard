"lt":
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Sveiki atvykę į savo pirmąjį Vienos Valandos Kodą! Pamėginkime pažiūrėti,
          kaip atrodo programavimas.
      2:
        image: notes/hoc1_2.jpg
        text: Naudosime Blockly, vizualią programavimo kalbą, kurioje reikia vilkti
          ir sujungti blokelius, kad parašyti programos kodą.
      3:
        image: notes/hoc1_3.jpg
        text: Dažniausiai kodas yra rašomas ranka, tačiau Blockly turi vizualią aplinką.
          Kiekvienas blokelis atitinką vieną eilutę tikro rašomo kodo.
      4:
        image: notes/hoc1_4.jpg
        text: 'Susipažinsite su informatikos pagrindais, programavimo koncepcijomis,
          kurios yra naudojamos visur: nuo programėlių kūrimo iki robotų valdymo.'
      5:
        image: notes/hoc1_5.jpg
        text: Programa yra instrukcijų sąrašas, kurias turi įvykdyti Jūsų kompiuteris.
      6:
        image: notes/hoc1_6.jpg
        text: Jūsų pirmosios programos tikslas yra nuvesti paukštį per labirintą iki
          žalios kiaulės.
      7:
        image: notes/hoc1_7.jpg
        text: Kairėje yra labirintas, kuriame veikia Jūsų programa. Kiekvienos užduoties
          instrukcijos yra matomos labirinto apačioje.
      8:
        image: notes/hoc1_8.jpg
        text: Labirinto dešinėje yra priemonės, su kuriomis galima valdyti paukštį.
          Jomis reikės naudotis rašant savo programas.
      9:
        image: notes/hoc1_9.jpg
        text: Dešinėje yra baltas darbo laukas, į kurį reikės nuvilkti blokelius,
          kad sudėlioti programą. Jeigu norite pašalinti blokelį, jį reikia nuvilkti
          į šiukšlinę kampe.
      10:
        image: notes/hoc1_10.jpg
        text: Kiekvienas blokelis yra viena instrukcija. Jeigu baltame lauke bus vienas
          blokelis „judėk į priekį“ ir nuspausite mygtuką „Paleisti programą“, paukštis
          pajudės per vieną laukelį į priekį.
      11:
        image: notes/hoc1_11.jpg
        text: Kad paukštis padarytų daugiau veiksmų, reikia sulipdyti su blokelius
          baltame darbo lauke. Paukštis atliks visas sulipdytas komandas iš eilės
          vieną po kitos.
      12:
        image: notes/hoc1_12.jpg
        text: Jeigu jau paleidote programą vieną kartą, galite ją pataisyti ir paspausti
          mygtuką „Iš naujo“.
      13:
        image: notes/hoc1_13.jpg
        text: Einam ir pagaudykim kiaules!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Labas, aš esu JR! Kiekvienai lenktyninių automobilių komandai reikia
          bent vieno kompiuteristo, kad laimėtų lenktynes. Jis analizuoja automobilio
          duomenis ir gali padaryti, kad ji veiktų greičiau.
      2:
        image: notes/stage5_2.jpg
        text: Šiose užduotyse reikės valdyti menininką, kuris piešia liniją ten, kur
          jis eina.
      3:
        image: notes/stage5_3.jpg
        text: Šis blokelis yra pavadintas „Judėk į priekį per 100 pikselių.“ Pikselis
          yra mažytis taškelis tavo ekrane.
      4:
        image: notes/stage5_4.jpg
        text: Šis blokelis yra pavadintas „Pasisuk į dešinę per 90 laipsnių“. Jis
          pasuks menininką tokiu pat kampu kaip ir paukštis labirinto užduotyse.
      5:
        image: notes/stage5_5.jpg
        text: Nuspaudus rodyklėlę ant bet kurio iš šių blokelių, galima pakeisti skaičių,
          per kiek pikselių menininkas pajudės į priekį arba kiek laipsnių pasisuks.
          Siūlau šiek tiek pažaisti su šiais blokais, kol taps aišku, kaip jie veikia.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Labas, aš esu Paola! Šiose užduotyse tu valdysi ūkininkę, kuriai reikia
          paruošti lauką, kad galėtų pradėti sodinti augalus.
      2:
        image: notes/stage9_2.jpg
        text: Jai reikės padėti nukasti visas purvo krūvas lauke arba užpildyti duobes
          žemėmis.
      3:
        image: notes/stage9_3.jpg
        text: 'Nauji blokeliai veikia štai taip: nukasa vieną kastuvą, pilną purvo,
          jei tai yra purvo krūva arba suverčia vieną kastuvą, pilną žemių, į duobę.'
      4:
        image: notes/stage9_4.jpg
        text: Krūvos ir duobės yra skirtingų dydžių. Ūkininkei reikia nurodyti, kiek
          kastuvų reikės panaudoti.
    flappy_intro:
      1:
        image: pastabos/flappy01.jpg
        text: Labas, aš esu Katie! Vienas smagiausių dalykų informatikoje yra tai,
          kad kompiuterio programa gali būti interaktyvi.
      2:
        image: pastabos/flappy02.jpg
        text: Kiekvieną kartą, kai žmogus nuspaudžia, baksteli pirštu ar ką nors parašo
          kompiuteryje ar telefone, nutinka koks nors veiksmas. Koks veiksmas yra
          atliekamas, priklauso nuo kodo, koks yra parašytas programoje.
      3:
        image: pastabos/flappy03.jpg
        text: 'Pavyzdžiui, gali būti suprogramuotas toks įvykis: „kai bus nuspaustas
          pelės klavišas, grok garsą“ '
      4:
        image: pastabos/flappy04.jpg
        text: Ar kada nors teko girdėti apie žaidimą FlappyBird? Naudodami įvykius,
          išmoksime suprogramuoti savo asmeninę FlappyBird žaidimo versiją!
      5:
        image: pastabos/flappy05.jpg
        text: The code you'll write involves dragging and dropping blocks that represent
          commands for the computer. Under the hood, each of these blocks is represented
          by real code.
      6:
        image: pastabos/flappy06.jpg
        text: 'If you take a look at the workspace, there are some green blocks that
          are filled in for you - these are "event handlers" '
      7:
        image: pastabos/flappy07.jpg
        text: If you want the bird to FLAP when you CLICK the mouse, you can do that
          by attaching the "FLAP" block to the appropriate event handler, and now
          in your game whenever you click the mouse, the bird will flap.
      8:
        image: pastabos/flappy08.jpg
        text: In each puzzle of this activity we'll introduce new types of events
          as green blocks on the workspace, and you can decide the appropriate blocks
          to add in response to those events.
      9:
        image: pastabos/flappy09.jpg
        text: When you see a drop down arrow like this, that means you can change
          the settings - like what sound to play when flappy hits the ground.
      10:
        image: pastabos/flappy10.jpg
        text: In the final puzzle you'll be able to create your own game and share
          it with your friends. Have fun!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Labas, aš esu Markas! Pasimokykime apie ciklus. Naudojant ciklus, galima
          nurodyti kompiuteriui, kad jis pakartotų bet kurias pasirinktas komandas
          iš naujo ir iš naujo, tūkstančius ar net milijonus kartų.
      2:
        image: notes/hoc2_2.jpg
        text: Šioje užduotyje reikia pajudinti paukštį per 5 laukelius, kad jis pagautų
          kiaulę.
      3:
        image: notes/hoc2_3.jpg
        text: Panaudokime naują blokelį „Kartok“.
      4:
        image: notes/hoc2_4.jpg
        text: Užduot sulipdę 5 blokelius „judėk į priekį“...
      5:
        image: notes/hoc2_5.jpg
        text: Mes galime įdėti blokelį „judėk į priekį“ į blokelio „kartok“ vidų.
          Taip pat reikia nurodyti skaičių kartojimo blokelyje, kad paukštis žinotų,
          kiek kartų kartoti šį veiksmą.
      6:
        image: notes/hoc2_6.jpg
        text: 'Dar vienas svarbus dalykas: į blokelio „kartok“ vidų galima įdėti daugiau
          nei vieną komandą.'
      7:
        image: notes/hoc2_7.jpg
        text: Sėkmės naudojant kartojimo blokelį!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Labas, aš esu Chris. Gruzijoje aš studijavau informatiką. Išmėginkime
          kartu naują blokelį „Kartok, kol“.
      2:
        image: notes/hoc3_2.jpg
        text: What if we didn't know how far the bird had to move to get to the pig?
      3:
        image: notes/hoc3_3.jpg
        text: If we put a "move forward" block inside the "repeat until" block, the
          bird will move forward UNTIL it reaches the pig (or crashes into a wall).
      4:
        image: notes/hoc3_4.jpg
        text: 'And this is important: just like before, we can put multiple blocks
          inside the "repeat until" block, and they will all be repeated.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Hi, I''m Bill! Let''s learn a new fundamental concept: "If" statements.
          This is how computers make decisions.'
      2:
        image: notes/hoc4_2.jpg
        text: You use "If" statements yourself everday. Before you go outside each
          morning, you say IF it's raining outside, I need to wear my jacket.
      3:
        image: notes/hoc4_3.jpg
        text: We can tell the zombie to check IF there's path to the left, and if
          he finds a path to the left, we can have him turn in that direction.
      4:
        image: notes/hoc4_4.jpg
        text: To write the code for this, let's drag out our "if" block and put a
          "turn left" block inside it.
      5:
        image: notes/hoc4_5.jpg
        text: Now, if we put a "move forward" block above it and a "repeat" block
          around everything, each time the zombie moves, he'll check if there's a
          path to the left and turn. The "repeat" command is critical, to check for
          a turn at every step.
      6:
        image: notes/hoc4_6.jpg
        text: If statements are really important in computer science. One of the first
          programs I wrote was a tic-tac-toe game, and there was a If statement that
          said IF the other person is about to win, block the spot that lets them
          win.
      7:
        image: notes/hoc4_7.jpg
        text: Have fun using the "if" block!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Hi, my name is Saloni. I use computer science to help solve problems
          in health and medicine. Let's learn about the "if else" block. It looks
          like the "if" block, but it has an extra part at the end that says "else".
      2:
        image: notes/hoc5_2.jpg
        text: If I put a "move forward" block in the spot where it says "do" and a
          "turn left" block where it says "else" that means that the zombie will choose
          between 2 options. IF there is a path ahead, the zombie will move forward,
          and OTHERWISE (there isn't a path ahead), the zombie will turn left.
      3:
        image: notes/hoc5_3.jpg
        text: Just like the "if" block, we can put "if else" blocks inside a "repeat"
          blocks so that the zombie keeps moving and the "if else" block will keep
          checking if there's somewhere to turn.
      4:
        image: notes/hoc5_4.jpg
        text: Now, get those zombies where they belong!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Hi, I'm Brina, an engineer at Instagram. A function is certain lines
          of code that you want to use over and over again, so instead of writing
          that code out everytime, you can just use one block.
      2:
        image: notes/stage13_2.jpg
        text: We're going to learn how to define functions. Function definitions have
          a star in the corner. The name of the function is written on the top line.
      3:
        image: notes/stage13_3.jpg
        text: The blocks that go inside the definition tell us what it does. So this
          function definition is called "fill 5" and it's made up of a "repeat" block
          and a "fill" block.
      4:
        image: notes/stage13_4.jpg
        text: The definition sits on the workspace, but our farmer won't run the function
          until we drag out our "fill 5" function block from functions category.
      5:
        image: notes/stage13_5.jpg
        text: 'Let''s put the "fun" back in "FUNction!" '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'Hi, I''m Makinde! Let''s learn about the "while block." '
      2:
        image: notes/stage9_6.jpg
        text: The "while block" will do whatever you put inside it AS LONG AS the
          statement on the top is TRUE.
      3:
        image: notes/stage9_7.jpg
        text: For example, if the farmer is standing on a pile, she will continue
          to remove 1 shovelful WHILE there is still a pile beneath her.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Hi, I'm Trina, and I work for Pixar. I've worked on a bunch of movies,
          including Shrek.
      2:
        image: notes/stage11_2.jpg
        text: This is our new "counter" loop. It will perform actions over and over
          again and you can make the actions change slightly each time.
      3:
        image: notes/stage11_3.jpg
        text: In this example, our "counter" loop says "count with counter from 50
          to 90 by 10" and inside it, we have our "draw a square" block. Drag the
          "counter" block from the "Variables" section into the "length" spot.
      4:
        image: notes/stage11_4.jpg
        text: This means our artist is going to draw a square that has 50 pixel length
          sides, then it will add 10 to that and draw a square with 60 pixel length
          sides. Then it will keep adding 10 and drawing squares until it reaches
          90. So we'll have squares of 50, 60, 70, 80, and 90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Hi, I'm Janete, and I'm an engineer at Zynga.
      2:
        image: notes/stage15_2.jpg
        text: What if we want to draw a bunch of triangles and have their lengths
          be different sizes?
      3:
        image: notes/stage15_3.jpg
        text: We could write all that code out by hand or we can use a function with
          parameters.
      4:
        image: notes/stage15_4.jpg
        text: To do this, click the blue star on the "draw a triangle" function definition.
          Then drag "input name" into the "input" block.
      5:
        image: notes/stage15_5.jpg
        text: Then if you write "length" in the spot where it says "x" and press "Enter"
          you'll create a length input for your function.
      6:
        image: notes/stage15_6.jpg
        text: Then click on the star. Now, you want to click on the variables category
          and drag the "length" block into the "move forward" block of your function
          definition. And drag away the old number block.
      7:
        image: notes/stage15_7.jpg
        text: To use your function with parameters, click on the functions category
          and drag out your "draw a triangle with length" function.
      8:
        image: notes/stage15_8.jpg
        text: Now you can use the math block to input different numbers to draw triangles
          of different sizes.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Congratulations! With the last puzzle you solved, you just wrote code
          that can tell ANY robot how to find it's way through a non-branching maze
          or tunnel of any length, whether it's a zombie, a bird, a mars rover, or
          even a self-driving car.
      2:
        image: notes/hoc6_2.jpg
        text: The basic concepts you used are at the heart of every program or app
          you'll ever try.  We learned about repeat loops, repeat until statements,
          if statements, and if else statements.
      3:
        image: notes/hoc6_3.jpg
        text: If you liked your first hour of code, visit code.org to continue your
          education into computer science! Once you complete our 20 hour course, you'll
          have mastered the basics of programming, and can start learning how to write
          phone apps, robot instructions, games, you name it.
      4:
        image: notes/hoc6_4.jpg
        text: 'Technology is changing everything we do and it doesn''t matter if you''re
          young or old: programming is fun, it''s creative, and anyone can learn!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Show notes coming soon!
