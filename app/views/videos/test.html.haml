%div
  %h1 Video Test Page

  #video-container{width: 600, height:400}

  %h2 Your browser info

  %p= request.env['HTTP_USER_AGENT']

  %p= params[:fallback] ? 'Faking YouTube blocked' : ''

  %h2 YouTube block detection

  %p.blockedStatus{style: "font-weight: bold"} Detection succeeded. Assuming YouTube is not blocked.

  -#%h2 This video info
  -#
  -#%span{style: "width:'500%', height: '500%'"}=  simple_format(JSON.pretty_generate(video_info(Video.first)))
  -#
  %h2 Test options

  %span
    Fake YouTube being blocked:
    %a{href: '?fallback=true'} on
    \/
    %a{href: '?'} off

:javascript
  var videoInfo = #{video_info(Video.first).to_json};
  videoInfo['use_fallback'] = true;
  videoInfo['fallback_test_url'] = '#{params[:fallback] ? 'https://fake.example.com/favicon.ico' : 'https://www.youtube.com/favicon.ico'}';

  $('#video-container').append(createVideo(videoInfo).width(600).height(400));
  setupVideoFallback(videoInfo, 400, 600);

  $('.blockedStatus').css('color', 'green');
  onURLBlocked(videoInfo['fallback_test_url'], function() {
    $('.blockedStatus').html('YouTube could not be reached. Assuming YouTube is blocked. Using fallback.').css('color', 'red');
  });
