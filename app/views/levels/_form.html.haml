= form_for([@game, @level]) do |f|
  - if @level.errors.any?
    #error_explanation
      %h2
        = pluralize(@level.errors.count, "error")
        prohibited this level from being saved:
      %ul
        - @level.errors.full_messages.each do |msg|
          %li= msg
  .field
    = f.label :name
    %br/
    = f.text_field :name
  .field
    = f.label :instructions
    %br/
    = f.text_area :instructions
  .field
    = f.label :skin
    %br/
    = f.select :skin, options_for_select(@level.class.skins, @level.skin)
  .field
    - if @level.class.start_directions.present?
      = f.label :start_direction
      = f.select :start_direction, options_for_select(@level.class.start_directions, @level.start_direction)
    - else
      = f.label :start_direction, 'Start Direction (in degrees)'
      = f.number_field :start_direction, :in => 0...360, :value => @level.start_direction
  - if @level.type.try(:constantize) == Artist
    .field
      = f.label :x
      = f.number_field :x, :value => @level.x
    .field
      = f.label :y
      = f.number_field :y, :value => @level.y
  - if @level.class.step_modes.present?
    .field
      = f.label :step_mode
      = f.select :step_mode, options_for_select(@level.class.step_modes, @level.step_mode)
  - if @level.is_a? Karel
    .field
      = f.label :nectar_goal, 'Nectar Goal (bee only)'
      = f.number_field :nectar_goal, :value => @level.nectar_goal
    .field
      = f.label :honey_goal, 'Honey Goal (bee only)'
      = f.number_field :honey_goal, :value => @level.honey_goal
  .field
    = f.label :is_k1, "Is K1 level?"
    = f.check_box :is_k1
  .field
    = f.label 'concepts'
    %br/
    = f.collection_select :concept_ids, Concept.cached, :id, :name, { :selected => @level.concept_ids }, { :multiple => true, :name => 'level[concept_ids][]', :style => 'height: 160px' }
    %br/
    (shift-click to select multiple)
  .field
    = link_to "Edit Toolbox Blocks", game_level_edit_blocks_path(@game, @level, :toolbox_blocks)
  .field
    = link_to "Edit Start Blocks", game_level_edit_blocks_path(@game, @level, :start_blocks)
  .field
    = link_to "Edit Required Blocks", game_level_edit_blocks_path(@game, @level, :required_blocks)
  .field
    = link_to "Edit Predraw Blocks", game_level_edit_blocks_path(@game, @level, :predraw_blocks)
  .actions
    = f.submit
