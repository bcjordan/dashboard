.unplugged.multi

  -data = @level.properties

  %h2= multi_t(data['title'])
  %p= multi_t(data['description'])

  %div{:style=>'margin-left:20px'}
    %b= data['questions'][0]['text']
    %form#voteform{onsubmit: "return doVote()"}
      -data['answers'].each_with_index do |answer, i|
        -correct = answer["correct"]
        %input{id: "choice_#{i}", name: "vote", type: "radio", value: "#{i}", onchange: "radioChanged(#{i})", correct: "#{correct}"}
          %label{style: "display:inline", for: "choice_#{i}"}= multi_t(answer['text'])
        %br
      %br
      %br
    .buttons
      %a.btn.btn-primary.next-stage.submitButton
        Submit
  %br/
  %br/
  %br/

  %div{:style=>'clear:both'}

:javascript

  var selection = "none";   // "none", "wrong", "right"
  var clickedNext = false;  // avoid multiple simultaneous submissions

  function radioChanged(index) 
  {
    $('.submitButton').css({ opacity: 1.0 });
    selection = $("#choice_" + index).attr("correct") == "true" ? "right" : "wrong";
  }

  $(function() 
  {
    $('.submitButton').css({ opacity: 0.5 });
  });

  $('.submitButton').click(function() 
  {
    if (!clickedNext) 
    {
      clickedNext = true;

      if (selection == "wrong") 
      {
        alert("incorrect");
      }

      if (solution != "none")
      {
        sendReport({
          fallbackResponse: '#{@fallback_response.to_json}',
          callback: '#{@callback}',
          app: 'multi',
          level: '#{@level.level_num}',
          result: solution == "right",
          testResult: solution == "right" ? 100 : 0,
          onComplete: function() 
          {
            // reenable button
            clickedNext = false;

            if (videoInfo) 
            {
              showVideo(videoInfo);
            } 
            else if (nextRedirect) 
            {
              window.location.href = nextRedirect;
            }
          }
        });
      }
      else
      {
        // reenable button
        clickedNext = false;
      }
    }
  });
